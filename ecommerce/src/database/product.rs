//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub product_name: String,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub price: Decimal,
    pub star: Option<i32>,
    pub image_name: String,
    pub date_added: DateTime,
    pub category_id: i32,
    #[sea_orm(column_type = "Text")]
    pub description: String,
    pub quantity: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::categories::Entity",
        from = "Column::CategoryId",
        to = "super::categories::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Categories,
    #[sea_orm(has_many = "super::colors::Entity")]
    Colors,
    #[sea_orm(has_many = "super::sizes::Entity")]
    Sizes,
}

impl Related<super::categories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Categories.def()
    }
}

impl Related<super::colors::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Colors.def()
    }
}

impl Related<super::sizes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sizes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
